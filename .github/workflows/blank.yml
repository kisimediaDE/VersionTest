# This is a basic workflow to help you get started with Actions

name: Version

# Controls when the workflow will run
on:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs: 
      versionType: ${{ steps.keyword.outputs.versionType }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Get pull request title and check for mayor, minor or patch
        id: keyword
        run: |
          if [[ "${{ github.event.pull_request.title }}" == *"mayor"* ]]; then
            echo "versionType=mayor" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.event.pull_request.title }}" == *"minor"* ]]; then
            echo "versionType=minor" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.event.pull_request.title }}" == *"patch"* ]]; then
            echo "versionType=patch" >> "$GITHUB_OUTPUT"
          else
            echo "versionType=none" >> "$GITHUB_OUTPUT"
          fi

  release: 
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: write
    if: needs.version.outputs.versionType != 'none'

    steps:
        - uses: actions/checkout@v4

        - name: Get next version
          uses: reecetech/version-increment@2024.4.4
          id: version
          with:
            scheme: semver
            release_branch: main
            increment: ${{ needs.version.outputs.versionType }}

        - id: tag_name
          if: needs.version.outputs.versionType != 'none'
          run: echo "version=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"    

        - name: Create version number file in release and update
          run: |
            echo ${{ steps.version.outputs.version }}\|${{ steps.tag_name.outputs.version }} > version

        - name: Zip Release
          run: |
            zip -r release.zip .

        - name: Upload Release
          uses: softprops/action-gh-release@v2.0.5
          with:
            files: release.zip
            prerelease: false
            draft: false
            tag_name: ${{ steps.version.outputs.version }}